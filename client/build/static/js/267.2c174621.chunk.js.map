{"version":3,"file":"static/js/267.2c174621.chunk.js","mappings":"oNA4FA,IAtFmB,SAAC,GAAyB,IAAxBA,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,UAElBC,GAAQC,EAAAA,EAAAA,KAAY,SAACC,GAAD,iBAAeA,EAAf,IAApBF,KAyDT,OACE,UAAC,WAAD,YACI,gBAAKG,UAAU,MAAf,SACKL,EAAOM,QAAUN,EAAOM,OAAOC,KAAI,SAACC,EAAOC,GACxC,OACI,cAAGJ,UAAU,MAA4BK,QAAS,kBA5DxCC,EA4D+DH,EAAMG,UA3D3FC,QAAQC,IAAIF,QACZG,IAAAA,KAAA,UAAcC,4BAAd,iBAAwD,CAACJ,UAAAA,GACtD,CAAEK,QAAS,CACNC,SAAUf,EAAOA,EAAKgB,MAAQ,MAGrCC,MAAK,SAAAC,GACFR,QAAQC,IAAIO,EAAIC,MAChB,IACIC,EADatB,EAAVM,OACqBiB,QAAO,SAACC,GAChC,OAAOA,EAAKb,YAAcA,CAC7B,IACDV,GAAU,kBAAID,GAAL,IAAaM,OAAOgB,IAChC,IACAG,OAAM,SAAAC,GACHd,QAAQC,IAAIa,EACf,IAjBoB,IAACf,CA4DwC,EAAlD,UACI,SAAC,IAAD,CAAOgB,MAAM,IAAb,UACI,SAAC,IAAD,CAASC,IAAKpB,EAAMqB,IAAKC,KAAM,GAAIzB,UAAU,OAAO0B,MAAM,cAF1CvB,EAAMG,UASrC,OAEL,gBAAKN,UAAU,MAAf,UACI,mBAAOA,UAAU,6BAAjB,yBACA,kBAAO2B,KAAK,OAAOC,UAAQ,EAACC,QAAM,EAAEC,OAAO,WAAWC,SAtDlC,SAACC,GAG1B,IAAIC,EAAQD,EAAEE,OAAOD,MACjBE,EAAoBxC,EAAOM,OAE/B,GAAGgC,EACF,IAAK,IAAIG,EAAG,EAAGA,EAAIH,EAAMI,OAAQD,IAC7BE,IAAAA,iBAAyBL,EAAMG,GAAI,IAAK,IAAK,OAAQ,IAAK,GAAG,SAACG,GAE1D9B,IAAAA,KAAA,UAAcC,4BAAd,iBAAwD,CAACP,MAAMoC,GAAM,CACjE5B,QAAQ,CACJC,SAAUf,EAAOA,EAAKgB,MAAQ,MAGrCC,MAAK,SAAAC,GACFR,QAAQC,IAAIO,EAAIC,MAChBmB,EAAiBK,KAAKzB,EAAIC,MAE1BpB,GAAU,kBAAID,GAAL,IAAaM,OAASkC,IAClC,IACAf,OAAM,SAAAC,GACHd,QAAQC,IAAIa,GACZoB,EAAAA,GAAAA,MAAYpB,EAAIqB,QAEnB,GACJ,GACD,SAOP,WA2BJ,C,sDCzDD,IA9BiB,WACf,OACE,0BACI,gBAAI1C,UAAU,kBAAd,WACI,eAAIA,UAAU,WAAd,UACI,SAAC,KAAD,CAAM2C,GAAG,mBAAmB3C,UAAU,WAAtC,0BAEJ,eAAIA,UAAU,WAAd,UACI,SAAC,KAAD,CAAM2C,GAAG,iBAAiB3C,UAAU,WAApC,wBAEJ,eAAIA,UAAU,WAAd,UACI,SAAC,KAAD,CAAM2C,GAAG,kBAAkB3C,UAAU,WAArC,yBAEJ,eAAIA,UAAU,WAAd,UACI,SAAC,KAAD,CAAM2C,GAAG,kBAAkB3C,UAAU,WAArC,yBAEJ,eAAIA,UAAU,WAAd,UACI,SAAC,KAAD,CAAM2C,GAAG,aAAa3C,UAAU,WAAhC,6BAEJ,eAAIA,UAAU,WAAd,UACI,SAAC,KAAD,CAAM2C,GAAG,gBAAgB3C,UAAU,WAAnC,uBAEJ,eAAIA,UAAU,WAAd,UACI,SAAC,KAAD,CAAM2C,GAAG,iBAAiB3C,UAAU,WAApC,4BAKf,C,mPC7BY4C,EAAa,yCAAG,WAAMhC,GAAN,sFACZH,IAAAA,IAAA,UACGC,4BADH,gBADY,mFAAH,sDAObmC,EAAW,yCAAG,WAAMC,GAAN,sFACVrC,IAAAA,IAAA,UACGC,4BADH,qBACyCoC,IAF/B,mFAAH,sDAKXC,EAAc,yCAAG,WAAMD,EAAMlC,GAAZ,sFACbH,IAAAA,OAAA,UACMC,4BADN,qBAC4CoC,GACjD,CACInC,QAAQ,CACJC,SAAAA,KALU,mFAAH,wDAYdoC,EAAc,yCAAG,WAAMF,EAAMG,EAAUrC,GAAtB,sFACbH,IAAAA,IAAA,UACGC,4BADH,qBACyCoC,GAAQG,EACtD,CACItC,QAAQ,CACJC,SAAAA,KALU,mFAAH,0DAWdsC,EAAc,yCAAG,WAAMD,EAAUrC,GAAhB,sFACbH,IAAAA,KAAA,UACIC,4BADJ,aAC0CuC,EAC/C,CACItC,QAAQ,CACJC,SAAAA,KALU,mFAAH,wDAWduC,EAAe,yCAAG,WAAMC,GAAN,sFACd3C,IAAAA,IAAA,UACGC,4BADH,0BAC8C0C,IAFhC,mFAAH,sDAKfC,EAAQ,yCAAG,WAAMD,GAAN,sFACP3C,IAAAA,IAAA,UACGC,4BADH,0BAC8C0C,IAFvC,mFAAH,qD,2TClDRE,EAAa,yCAAG,WAAMC,EAAS3C,GAAf,sFACZH,IAAAA,KAAA,UACIC,4BADJ,YACyC6C,EAC9C,CACI5C,QAAQ,CACJC,SAAAA,KALS,mFAAH,wDAYb4C,EAAiB,yCAAG,WAAMlC,GAAN,sFAChBb,IAAAA,IAAA,UACGC,4BADH,qBACyCY,IAFzB,mFAAH,sDAMjBmC,EAAa,yCAAG,WAAMX,EAAMlC,GAAZ,sFACZH,IAAAA,OAAA,UACMC,4BADN,qBAC4CoC,GAAQ,CACrDnC,QAAQ,CACJC,SAAAA,KAJS,mFAAH,wDAWb8C,EAAW,yCAAG,WAAMZ,GAAN,sFACVrC,IAAAA,IAAA,UACGC,4BADH,yBAC6CoC,IAFnC,mFAAH,sDAMXa,EAAa,yCAAG,WAAMb,EAAMS,EAAU3C,GAAtB,sFACZH,IAAAA,IAAA,UACGC,4BADH,oBACwCoC,GAAQS,EAAU,CAC3D5C,QAAQ,CACJC,SAAAA,KAJS,mFAAH,0DAUbgD,EAAW,yCAAG,WAAMC,EAAMC,EAAOC,GAAnB,sFACVtD,IAAAA,KAAA,UACIC,4BADJ,aAC0C,CAACmD,KAAAA,EAAMC,MAAAA,EAAOC,KAAAA,IAF9C,mFAAH,0DAMXC,EAAgB,yCAAG,mGACfvD,IAAAA,IAAA,UACGC,4BADH,2BADe,mFAAH,qDAMhBuD,EAAW,yCAAG,WAAMC,EAAWC,EAAOvD,GAAxB,sFACVH,IAAAA,IAAA,UACGC,4BADH,yBAC6CwD,GAAa,CAACC,KAAAA,GAAQ,CACpExD,QAAQ,CACJC,SAAAA,KAJO,mFAAH,0DAUXwD,EAAU,yCAAG,WAAMF,GAAN,sFACTzD,IAAAA,IAAA,UACGC,4BADH,4BACgDwD,IAFvC,mFAAH,sDAMVG,EAAqB,yCAAG,WAAMC,GAAN,sFACpB7D,IAAAA,KAAA,UACIC,4BADJ,mBACgD4D,GAF5B,mFAAH,qD,kKC/D3BC,EAAUC,EAAAA,EAAAA,OA4PjB,UA1PsB,YAElBC,EAAAA,EAAAA,YAAU,WAENC,EAAgB5B,EAAKA,MACrB6B,GAEH,GAAE,IAEH,IAcI7B,GAAO8B,EAAAA,EAAAA,MACPC,GAAUC,EAAAA,EAAAA,MAEd,GAA4BC,EAAAA,EAAAA,UAjBP,CACjBC,MAAM,GACNC,YAAY,GACZC,MAAM,GACNjC,SAAS,GACTkC,KAAK,GACLC,SAAS,GACTC,SAAS,GACTpF,OAAO,GACPqF,OAAO,CAAC,QAAS,QAAS,SAAU,QAAS,QAC7CC,OAAO,CAAC,QAAS,UAAW,YAAa,SAAU,SACnDC,MAAM,GACNC,MAAM,KAKV,eAAO9F,EAAP,KAAeC,EAAf,KACA,GAAqCmF,EAAAA,EAAAA,UAAS,IAA9C,eAAOW,EAAP,KAAmBC,EAAnB,KACA,GAAoCZ,EAAAA,EAAAA,UAAS,IAA7C,eAAOa,EAAP,KAAmBC,EAAnB,KACA,GAAwCd,EAAAA,EAAAA,UAAS,IAAjD,eAAOe,EAAP,KAAoBC,EAApB,KACA,GAAgDhB,EAAAA,EAAAA,UAAS,IAAzD,eAAOiB,EAAP,KAAyBC,EAAzB,KAIOjB,EAAuGrF,EAAvGqF,MAAOC,EAAgGtF,EAAhGsF,YAAaC,EAAmFvF,EAAnFuF,MAAuBE,GAA4DzF,EAA5EsD,SAA4EtD,EAAlEwF,KAAkExF,EAA5DyF,UAAUC,EAAkD1F,EAAlD0F,SAAkBC,GAAgC3F,EAAxCM,OAAwCN,EAAhC2F,QAAQC,EAAwB5F,EAAxB4F,OAAQC,EAAgB7F,EAAhB6F,MAAOC,EAAS9F,EAAT8F,MAE9F5F,GAAQC,EAAAA,EAAAA,KAAY,SAACC,GAAD,iBAAeA,EAAf,IAApBF,KAoBD6E,EAAkB,SAAC5B,IACrBY,EAAAA,EAAAA,IAAYZ,GACPhC,MAAK,SAAAC,GAEFnB,GAAU,kBAAID,GAAWoB,EAAIC,QAE7BmC,EAAAA,EAAAA,IAAgBpC,EAAIC,KAAKiC,UACpBnC,MAAK,SAAAoF,GACFL,EAAcK,EAAElF,KACnB,IAEL,IAAImF,EAAM,GACVpF,EAAIC,KAAKmE,KAAKjF,KAAI,SAAAkG,GACVD,EAAI3D,KAAK4D,EAChB,IACDL,GAAiB,kBAAMI,CAAN,GACpB,IACA/E,OAAM,SAAAC,GACHd,QAAQC,IAAIa,EACf,GACR,EAiBKgF,EAAe,SAACrE,GAClBpC,GAAU,kBAAID,GAAL,cAAcqC,EAAEE,OAAOoE,KAAOtE,EAAEE,OAAOqE,QACnD,EAEK5B,EAAiB,YACnB/B,EAAAA,EAAAA,MACC9B,MAAK,SAAC0F,GACLb,EAAca,EAAExF,KACjB,GACF,EAIL,OACE,gBAAKhB,UAAU,kBAAf,UACI,iBAAKA,UAAU,MAAf,WACI,gBAAKA,UAAU,WAAf,UACI,SAAC,IAAD,OAEJ,gBAAKA,UAAU,WAAf,UACA,iBAAKA,UAAU,WAAf,WACQ,8CACA,mBACA,gBAAKA,UAAU,MAAf,UACE,SAAC,IAAD,CAAYL,OAASA,EAAQC,UAAWA,OAE1C,kBAAM6G,SAzCD,SAACzE,GAClBA,EAAE0E,iBACF/G,EAAOwF,KAAOW,EACdnG,EAAOsD,SAAW+C,GAAsCrG,EAAOsD,UAC/DU,EAAAA,EAAAA,IAAcb,EAAKA,KAAMnD,EAAQE,EAAKgB,OACjCC,MAAK,SAAAC,GACF8D,EAAQrC,KAAK,kBAChB,IACApB,OAAM,SAAAC,GACHd,QAAQC,IAAIa,GACZoB,EAAAA,GAAAA,MAAYpB,EAAIqB,QACnB,GAER,EA4Be,WACE,iBAAK1C,UAAU,aAAf,WACE,sCACA,kBAAQ2B,KAAK,OACL2E,KAAK,QACLtG,UAAU,eACVuG,MAASvB,EACTjD,SAAWsE,EACXM,UAAQ,QAIlB,iBAAK3G,UAAU,aAAf,WACE,4CACA,kBAAQ2B,KAAK,OACL2E,KAAK,cACLtG,UAAU,eACVuG,MAAStB,EACTlD,SAAWsE,EACXM,UAAQ,QAIlB,iBAAK3G,UAAU,aAAf,WACE,sCACA,kBAAQ2B,KAAK,SACL2E,KAAK,QACLtG,UAAU,eACVuG,MAASrB,EACTnD,SAAWsE,EACXM,UAAQ,QAIhB,iBAAK3G,UAAU,aAAf,WACE,yCACA,oBAASuG,MAAOnB,EAAUkB,KAAK,WAAWtG,UAAU,eAAe+B,SAAYsE,EAAcM,UAAQ,EAArG,WACE,mBAAQJ,MAAM,gBAAd,4BACA,mBAAQA,MAAM,KAAd,iBACA,mBAAQA,MAAM,MAAd,wBAIJ,iBAAKvG,UAAU,aAAf,WACE,yCACA,kBAAQ2B,KAAK,SACL2E,KAAK,WACLtG,UAAU,eACVuG,MAASlB,EACTtD,SAAWsE,EACXM,UAAQ,QAIlB,iBAAK3G,UAAU,aAAf,WACE,sCACA,oBAAQuG,MAAOf,EAAOc,KAAK,QAAQtG,UAAU,eAAe+B,SAAYsE,EAAcM,UAAQ,EAA9F,WACE,mBAAQJ,MAAM,gBAAd,2BAEEjB,EAAOpF,KAAI,SAACsF,EAAOpF,GACjB,OACE,mBAAQmG,MAAOf,EAAf,SAAoCA,GAATpF,EAE9B,WAKP,iBAAKJ,UAAU,aAAf,WACE,sCACA,oBAAQuG,MAAOd,EAAOa,KAAK,QAAQtG,UAAU,eAAe+B,SAAYsE,EAAcM,UAAQ,EAA9F,WACE,mBAAQJ,MAAM,gBAAd,2BAEEhB,EAAOrF,KAAI,SAACuF,EAAOrF,GACjB,OACE,mBAAQmG,MAAOd,EAAf,SAAoCA,GAATrF,EAE9B,WAKP,iBAAKJ,UAAU,aAAf,WACE,yCACA,mBAAQsG,KAAK,WAAWtG,UAAU,eAAe+B,SApK1C,SAACC,GAC1BA,EAAE0E,iBACF9G,GAAU,kBAAID,GAAL,IAAawF,KAAK,GAAIlC,SAASjB,EAAEE,OAAOqE,SACjDN,EAAoBjE,EAAEE,OAAOqE,QAC7BpD,EAAAA,EAAAA,IAAgBnB,EAAEE,OAAOqE,OACtBzF,MAAK,SAAAC,GACJ8E,EAAc9E,EAAIC,KACnB,IAEErB,EAAOsD,WAAajB,EAAEE,OAAOqE,OAE9B7B,IAGAqB,EAAiB,GACtB,EAqJsGY,UAAQ,EAA3F,SAGGjB,EAAWxF,KAAI,SAAC0G,EAAKxG,GACpB,OACE,mBAAQmG,MAAOK,EAAIxD,IAAnB,SAAsCwD,EAAIN,MAAblG,EAEhC,SAKJwF,EAAWvD,OAAS,IACjB,iBAAKrC,UAAU,aAAf,WACE,+CACA,SAAC,IAAD,CAAQ6G,KAAK,WACLC,MAAO,CAACC,MAAM,QACdC,YAAY,gBACZT,MAAQT,EACR/D,SAAU,SAACwE,GAAD,OAAWR,EAAiBQ,EAA5B,EAJlB,SAKKX,EAAW1F,KAAI,SAAC0G,EAAKxG,GACtB,OACE,SAACmE,EAAD,CAAQgC,MAAOK,EAAIxD,IAAnB,SAAsCwD,EAAIN,MAAblG,EAEhC,UAUT,mBAAQJ,UAAU,uBAAlB,8BAWvB,C","sources":["component/forms/FileUpload.js","component/nav/AdminNav.js","functions/category.js","functions/product.js","pages/admin/product/ProductUpdate.js"],"sourcesContent":["import React from 'react'\r\nimport Resizer from 'react-image-file-resizer'\r\nimport axios from 'axios'\r\nimport { useSelector } from 'react-redux'\r\nimport {toast}  from 'react-toastify'\r\nimport { Avatar, Badge } from 'antd'\r\nconst FileUpload = ({values, setValues}) => {\r\n\r\n    const {user} = useSelector((state)=> ({...state}))\r\n\r\n    const handleImageRemove =(public_id) =>{\r\n        console.log(public_id)\r\n        axios.post(`${process.env.REACT_APP_API}/removeimages`, {public_id}, \r\n           { headers: {\r\n                authoken: user ? user.token : \"\"\r\n            }}\r\n        )\r\n        .then(res=>{\r\n            console.log(res.data)\r\n            const {images} = values\r\n            let filteredImages = images.filter((item)=>{\r\n                return item.public_id !== public_id\r\n            })\r\n            setValues({...values, images:filteredImages})\r\n        })\r\n        .catch(err =>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    const fileUploadAndResize = (e) =>{\r\n       // console.log(e.target.files)\r\n       //resize \r\n       let files = e.target.files\r\n       let allUploadedFiles =  values.images\r\n\r\n       if(files){\r\n        for (let i =0; i < files.length; i++){\r\n            Resizer.imageFileResizer(files[i], 720, 720, 'JPEG', 100, 0, (uri)=>{\r\n                // console.log(typeof uri)\r\n                axios.post(`${process.env.REACT_APP_API}/uploadimages`, {image:uri}, {\r\n                    headers:{\r\n                        authoken: user ? user.token : \"\"\r\n                    }\r\n                })\r\n                .then(res =>{\r\n                    console.log(res.data)\r\n                    allUploadedFiles.push(res.data)\r\n\r\n                    setValues({...values, images:  allUploadedFiles})\r\n                })\r\n                .catch(err=>{\r\n                    console.log(err)\r\n                    toast.error(err.message)\r\n\r\n                })\r\n            }, \r\n            \"base64\"\r\n              )\r\n\r\n        }\r\n       }\r\n       //send back to server to upload to cloudinary\r\n       //set url to images[] in the parent component - ProductCreate\r\n    }\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <div className=\"row\">\r\n            {values.images && values.images.map((image, index)=>{\r\n                return (\r\n                    <a className=\"col\" key={image.public_id} onClick={()=> handleImageRemove(image.public_id)}>\r\n                        <Badge count=\"X\"  >\r\n                            <Avatar  src={image.url} size={80} className=\"ml-3\" shape=\"square\" />\r\n                        </Badge>\r\n\r\n                    </a>\r\n                    \r\n                    \r\n                )\r\n            })}\r\n        </div>\r\n        <div className=\"row\">\r\n            <label className=\"btn btn-primary btn-raised\">Choose File\r\n            <input type=\"file\" multiple hidden  accept=\"images/*\" onChange={fileUploadAndResize}/>\r\n        </label>\r\n    </div>\r\n\r\n    </React.Fragment>\r\n    \r\n  )\r\n}\r\n\r\nexport default FileUpload","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst AdminNav = () => {\r\n  return (\r\n    <nav>\r\n        <ul className=\"nav flex-column\">\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/admin/dashboard\" className=\"nav-link\">DASHBOARD</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/admin/product\" className=\"nav-link\">PRODUCT</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/admin/products\" className=\"nav-link\">PRODUCTS</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/admin/category\" className=\"nav-link\">CATEGORY</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/admin/sub\" className=\"nav-link\">SUB CATEGORY</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/admin/coupon\" className=\"nav-link\">COUPON</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/user/password\" className=\"nav-link\">PASSWORD</Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default AdminNav","import axios from 'axios'\r\n\r\nexport const getCategories = async(authoken) =>{\r\n    return await axios\r\n            .get(`${process.env.REACT_APP_API}/categories`)\r\n            \r\n}\r\n\r\n\r\nexport const getCategory = async(slug) =>{\r\n    return await axios\r\n            .get(`${process.env.REACT_APP_API}/category/${slug}`)\r\n            \r\n}\r\nexport const removeCategory = async(slug, authoken) =>{\r\n    return await axios\r\n            .delete(`${process.env.REACT_APP_API}/category/${slug}`, \r\n            {\r\n                headers:{\r\n                    authoken //send in the headers \r\n                }\r\n            })\r\n            \r\n}\r\n\r\n\r\nexport const updateCategory = async(slug, category, authoken) =>{\r\n    return await axios\r\n            .put(`${process.env.REACT_APP_API}/category/${slug}`, category, \r\n            {\r\n                headers:{\r\n                    authoken //send in the headers \r\n                }\r\n            })\r\n            \r\n}\r\n\r\nexport const createCategory = async(category, authoken) =>{\r\n    return await axios\r\n            .post(`${process.env.REACT_APP_API}/category`, category , \r\n            {\r\n                headers:{\r\n                    authoken //send in the headers \r\n                }\r\n            })\r\n            \r\n}\r\n\r\nexport const getCategorySubs = async(_id) =>{\r\n    return await axios\r\n            .get(`${process.env.REACT_APP_API}/category/subs/${_id}`)\r\n}\r\n\r\nexport const findById = async(_id) =>{\r\n    return await axios\r\n            .get(`${process.env.REACT_APP_API}/find/category/${_id}`)\r\n}","import axios from 'axios'\r\n\r\n\r\nexport const createProduct = async(product, authoken) =>{\r\n    return await axios\r\n            .post(`${process.env.REACT_APP_API}/product`, product , \r\n            {\r\n                headers:{\r\n                    authoken  \r\n                }\r\n            })\r\n            \r\n}\r\n\r\n\r\nexport const getProducstByCart = async(count) =>{\r\n    return await axios\r\n            .get(`${process.env.REACT_APP_API}/products/${count}`)\r\n            \r\n}\r\n\r\nexport const removeProduct = async(slug, authoken) =>{\r\n    return await axios\r\n            .delete(`${process.env.REACT_APP_API}/products/${slug}`, {\r\n                headers:{\r\n                    authoken\r\n                }\r\n            })\r\n            \r\n}\r\n\r\n\r\nexport const readProduct = async(slug) =>{\r\n    return await axios\r\n            .get(`${process.env.REACT_APP_API}/product/read/${slug}`)\r\n            \r\n}\r\n\r\nexport const updateProduct = async(slug, product,  authoken) =>{\r\n    return await axios\r\n            .put(`${process.env.REACT_APP_API}/product/${slug}`, product , {\r\n                headers:{\r\n                    authoken\r\n                }\r\n            })\r\n            \r\n}\r\n\r\nexport const getProducts = async(sort, order, page) =>{\r\n    return await axios\r\n            .post(`${process.env.REACT_APP_API}/products`, {sort, order, page} )\r\n            \r\n}\r\n\r\nexport const getProductsCount = async() =>{\r\n    return await axios\r\n            .get(`${process.env.REACT_APP_API}/products/total/number`)\r\n            \r\n}\r\n\r\nexport const productStar = async(productId, star,  authoken) =>{\r\n    return await axios\r\n            .put(`${process.env.REACT_APP_API}/product/star/${productId}`, {star} , {\r\n                headers:{\r\n                    authoken\r\n                }\r\n            })\r\n            \r\n}\r\n\r\nexport const getRelated = async(productId) =>{\r\n    return await axios\r\n            .get(`${process.env.REACT_APP_API}/product/related/${productId}`)\r\n            \r\n}\r\n\r\nexport const fetchProductsByFilter = async(arg) =>{\r\n    return await axios\r\n            .post(`${process.env.REACT_APP_API}/search/filters`, arg)\r\n            \r\n}","import React, {useState, useEffect} from 'react'\r\nimport AdminNav from '../../../component/nav/AdminNav'\r\nimport {toast}  from 'react-toastify'\r\nimport { useSelector} from 'react-redux'\r\nimport {Select} from 'antd'\r\nimport { readProduct, updateProduct } from '../../../functions/product'\r\nimport {useParams} from 'react-router'\r\nimport { getCategories, getCategorySubs } from '../../../functions/category'\r\nimport FileUpload from '../../../component/forms/FileUpload'\r\nimport { useHistory } from 'react-router'\r\n\r\n\r\n\r\nconst {Option} = Select \r\n\r\nconst ProductUpdate = () => {\r\n    \r\n    useEffect(()=>{\r\n\r\n        readProductPage(slug.slug)  \r\n        loadCategories()\r\n\r\n    }, [])\r\n\r\n    const initialState = {\r\n        title:'',\r\n        description:'',\r\n        price:'',\r\n        category:[],\r\n        subs:[],\r\n        shipping:'',\r\n        quantity:'',\r\n        images:[],\r\n        colors:['Black', 'Brown', 'Silver', 'White', 'Blue'],\r\n        brands:['Apple', 'Samsung', 'Microsoft', 'Lenovo', 'Assus'], \r\n        color:'',\r\n        brand:''\r\n        }\r\n    let slug = useParams()\r\n    let history = useHistory()\r\n\r\n    const [values, setValues] = useState(initialState)\r\n    const [categories, setCategories] =  useState([])\r\n    const [subOptions, setSubOptions] = useState([])\r\n    const [arrayOfSubs, setArrayOfSubIds] = useState([])\r\n    const [selectedCategory, setSelectedCategory] = useState(\"\")\r\n\r\n\r\n\r\n    const {title, description, price ,category, subs, shipping, quantity, images, colors, brands, color, brand} = values\r\n\r\n    const {user} = useSelector((state)=> ({...state}))\r\n\r\n\r\n    const handleCategoryChange = (e) =>{\r\n        e.preventDefault()\r\n        setValues({...values, subs:[], category:e.target.value})\r\n        setSelectedCategory(e.target.value)\r\n        getCategorySubs(e.target.value)\r\n          .then(res => {\r\n            setSubOptions(res.data)\r\n          })\r\n\r\n          if(values.category === e.target.value){\r\n\r\n            readProductPage()\r\n        }          \r\n\r\n            setArrayOfSubIds([])\r\n      }\r\n\r\n    const readProductPage = (slug) =>{\r\n        readProduct(slug)\r\n            .then(res => {\r\n                //1 load single product\r\n                setValues({...values, ...res.data})\r\n                //2 load single product category subs\r\n                getCategorySubs(res.data.category)\r\n                    .then(p =>{\r\n                        setSubOptions(p.data)\r\n                    })\r\n                //3 prepare array of sub ids to show as default subs values in antd design select\r\n                let arr = []\r\n                res.data.subs.map(s =>{\r\n                        arr.push(s)\r\n                })\r\n                setArrayOfSubIds(() => arr)\r\n            })\r\n            .catch(err =>{\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault()\r\n        values.subs = arrayOfSubs\r\n        values.category = selectedCategory ? selectedCategory : values.category\r\n        updateProduct(slug.slug, values, user.token)\r\n            .then(res => {\r\n                history.push('/admin/products')\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                toast.error(err.message)\r\n            })\r\n        \r\n    }\r\n\r\n    const handleChange = (e) =>{\r\n        setValues({...values, [e.target.name]: e.target.value})\r\n    }\r\n \r\n    const loadCategories = () =>{\r\n        getCategories()\r\n        .then((c)=>  {\r\n          setCategories(c.data)\r\n        })\r\n      }\r\n\r\n   \r\n\r\n  return (\r\n    <div className='container-fluid'>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-2\">\r\n                <AdminNav/>\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n            <div className=\"col-md-8\">\r\n                    <h4>  Poduct Update </h4>\r\n                    <hr/>\r\n                    <div className=\"p-3\">\r\n                      <FileUpload values= {values} setValues={setValues}/>\r\n                    </div>\r\n                    <form onSubmit = {handleSubmit}>\r\n                      <div className=\"form-group\">\r\n                        <label>Title</label>\r\n                        <input  type=\"text\"  \r\n                                name=\"title\" \r\n                                className='form-control' \r\n                                value = {title} \r\n                                onChange= {handleChange}\r\n                                required\r\n                                />\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label>Description</label>\r\n                        <input  type=\"text\"  \r\n                                name=\"description\" \r\n                                className='form-control' \r\n                                value = {description} \r\n                                onChange= {handleChange}\r\n                                required\r\n                                />\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label>Price</label>\r\n                        <input  type=\"number\"  \r\n                                name=\"price\" \r\n                                className='form-control' \r\n                                value = {price} \r\n                                onChange= {handleChange}\r\n                                required\r\n                                />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                          <label>Shipping</label>\r\n                          <select  value={shipping} name=\"shipping\" className='form-control' onChange = {handleChange} required>\r\n                            <option value=\"Please Select\">Please Select</option>\r\n                            <option value=\"No\">No</option>\r\n                            <option value=\"Yes\">Yes</option>\r\n                          </select>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                          <label>Quantity</label>\r\n                          <input  type=\"number\"  \r\n                                  name=\"quantity\" \r\n                                  className='form-control' \r\n                                  value = {quantity} \r\n                                  onChange= {handleChange}\r\n                                  required\r\n                                  />\r\n                        </div>\r\n                        \r\n                        <div className=\"form-group\">\r\n                          <label>Color</label>\r\n                          <select value={color} name=\"color\" className='form-control' onChange = {handleChange} required>\r\n                            <option value=\"Please Select\">Please Select</option>\r\n                            {\r\n                              colors.map((color, index) => {\r\n                                return (\r\n                                  <option value={color} key={index} >{color}</option>\r\n                                )\r\n                              })\r\n                            }\r\n                          </select>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                          <label>Brand</label>\r\n                          <select value={brand} name=\"brand\" className='form-control' onChange = {handleChange} required>\r\n                            <option value=\"Please Select\">Please Select</option>\r\n                            {\r\n                              brands.map((brand, index) => {\r\n                                return (\r\n                                  <option value={brand} key={index} >{brand}</option>\r\n                                )\r\n                              })\r\n                            }\r\n                          </select>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                          <label>Category</label>\r\n                          <select name=\"category\" className='form-control' onChange = {handleCategoryChange} required>\r\n                            {/* <option >{category ? category.name : \"Please Select\"}</option> */}\r\n\r\n                            {categories.map((cat, index)=>{\r\n                              return (\r\n                                <option value={cat._id} key={index} >{cat.name}</option>\r\n                              )\r\n                            })}\r\n\r\n                          </select>\r\n                        </div>\r\n\r\n                        {subOptions.length > 0  && \r\n                            <div className=\"form-group\">\r\n                              <label>Sub Categories</label>\r\n                              <Select mode=\"multiple\" \r\n                                      style={{width:'100%'}} \r\n                                      placeholder=\"Please Select\" \r\n                                      value= {arrayOfSubs}\r\n                                      onChange={(value) => setArrayOfSubIds(value)}>\r\n                                  {subOptions.map((cat, index)=>{\r\n                                  return (\r\n                                    <Option value={cat._id} key={index} >{cat.name}</Option>\r\n                                  )\r\n                                })}\r\n\r\n                              </Select>\r\n                        \r\n                            </div>}\r\n\r\n\r\n                      \r\n                           \r\n                    \r\n                        <button className=\"btn btn-outline-info\">\r\n                            Save\r\n                        </button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n                \r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductUpdate"],"names":["values","setValues","user","useSelector","state","className","images","map","image","index","onClick","public_id","console","log","axios","process","headers","authoken","token","then","res","data","filteredImages","filter","item","catch","err","count","src","url","size","shape","type","multiple","hidden","accept","onChange","e","files","target","allUploadedFiles","i","length","Resizer","uri","push","toast","message","to","getCategories","getCategory","slug","removeCategory","updateCategory","category","createCategory","getCategorySubs","_id","findById","createProduct","product","getProducstByCart","removeProduct","readProduct","updateProduct","getProducts","sort","order","page","getProductsCount","productStar","productId","star","getRelated","fetchProductsByFilter","arg","Option","Select","useEffect","readProductPage","loadCategories","useParams","history","useHistory","useState","title","description","price","subs","shipping","quantity","colors","brands","color","brand","categories","setCategories","subOptions","setSubOptions","arrayOfSubs","setArrayOfSubIds","selectedCategory","setSelectedCategory","p","arr","s","handleChange","name","value","c","onSubmit","preventDefault","required","cat","mode","style","width","placeholder"],"sourceRoot":""}