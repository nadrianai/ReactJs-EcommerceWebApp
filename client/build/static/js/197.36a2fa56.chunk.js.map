{"version":3,"file":"static/js/197.36a2fa56.chunk.js","mappings":"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","sources":["functions/user.js","component/modal/RatingModal.js","pages/Product.js"],"sourcesContent":["import axios from 'axios'\n\nexport const userCart = async(cart, authoken) =>{\n    return await axios.post(`${process.env.REACT_APP_API}/user/cart`, {cart}, {\n        headers:{\n            authoken\n        }\n    })\n} \n\nexport const getUserCart = async( authoken) =>{\n    return await axios.get(`${process.env.REACT_APP_API}/user/cart`,{\n        headers:{\n            authoken\n        }\n    })\n}\n\nexport const emptyUserCart = async( authoken) =>{\n    return await axios.delete(`${process.env.REACT_APP_API}/user/cart`,{\n        headers:{\n            authoken\n        }\n    })\n}\n\nexport const saveUserAddress = async(address, authoken) =>{\n    return await axios.post(`${process.env.REACT_APP_API}/user/address`, {address}, {\n        headers:{\n            authoken\n        }\n    })\n} \n\nexport const applyCoupon = async(coupon, authoken) =>{\n    return await axios.post(`${process.env.REACT_APP_API}/user/cart/coupon`, {coupon}, {\n        headers:{\n            authoken\n        }\n    })\n} \n\nexport const createOrder = async(stripeResponse, authoken) =>{\n    return await axios.post(`${process.env.REACT_APP_API}/user/order`, {stripeResponse}, {\n        headers:{\n            authoken\n        }\n    })\n} \n\n\nexport const getUserOrders = async( authoken) =>{\n    return await axios.get(`${process.env.REACT_APP_API}/user/orders`,{\n        headers:{\n            authoken\n        }\n    })\n}\n\nexport const getWishlist = async( authoken) =>{\n    return await axios.get(`${process.env.REACT_APP_API}/user/wishlist`,{\n        headers:{\n            authoken\n        }\n    })\n}\n\nexport const removeFromWishlist = async(productId, authoken) =>{\n    return await axios.put(`${process.env.REACT_APP_API}/user/wishlist/:productId`,\n    {},\n    {\n        headers:{\n            authoken\n        }\n    })\n}\n\nexport const addToWishlist = async(productId, authoken) =>{\n    return await axios.post(`${process.env.REACT_APP_API}/user/wishlist`,\n    {productId},\n    {\n        headers:{\n            authoken\n        }\n    })\n}","import React, {useState} from 'react'\r\nimport {Modal, Button} from 'antd'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector } from 'react-redux'\r\nimport {StarOutlined} from '@ant-design/icons'\r\nimport { useHistory, useParams} from 'react-router-dom'\r\n\r\n\r\nconst RatingModal = ({children}) => {\r\n    const {user} = useSelector((state) => ({...state}))\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const history = useHistory()\r\n    let params = useParams()\r\n\r\n    const handleModal = () =>{\r\n\r\n        if(user && user.token ){\r\n            setModalVisible(true)\r\n        }else{\r\n            history.push({\r\n                pathname:'/login',\r\n                state: {from: `/product/${params.slug}`}\r\n            })\r\n        }\r\n    }\r\n  return (\r\n    <>\r\n        <div onClick={handleModal}>\r\n            <StarOutlined className='text-danger' /> <br/> \r\n            {user ? 'Leave rating' : \"Login to leave rating\"}\r\n        </div>\r\n        <Modal \r\n            title=\"Leave your rating\"\r\n            centered\r\n            visible = {modalVisible}\r\n            onOk={() => {\r\n                setModalVisible(false)\r\n                toast.success('Thanks for your review! It will appear soon!')\r\n                }}\r\n            onCancel ={() =>  setModalVisible(false)}\r\n            >\r\n            {children}\r\n        </Modal>\r\n\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\nexport default RatingModal","import React, {useEffect, useState} from 'react'\r\nimport {useParams} from 'react-router'\r\nimport {getRelated, productStar, readProduct} from '../functions/product'\r\nimport {Card, Tabs, Tooltip} from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport {HeartOutlined, ShoppingCartOutlined, StarOutlined} from '@ant-design/icons'\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport laptop from '../images/eceeee4c021a62c1877e22203056558d.png'\r\nimport { findById } from '../functions/category';\r\nimport { getSubById } from '../functions/sub'\r\nimport slugify from 'react-slugify'\r\nimport StarRatings from 'react-star-ratings'\r\nimport RatingModal from '../component/modal/RatingModal'\r\nimport { useSelector } from 'react-redux'\r\nimport { showAverage } from '../functions/rating'\r\nimport ProductCard from '../component/cards/ProductCard'\r\nimport  _ from 'lodash'\r\nimport { useDispatch} from 'react-redux'\r\nimport { addToWishlist } from '../functions/user'\r\nimport { toast } from 'react-toastify'\r\n\r\n\r\nconst {Meta} = Card\r\nconst {TabPane} = Tabs\r\n\r\nconst Product = () => {\r\n    const [product, setProduct] = useState()\r\n    const [category, setCategory] = useState()\r\n    const [subs, setSubs] = useState([])\r\n    const [star, setStar] = useState(0)\r\n    const [relatedProds, setRelated] = useState([])\r\n\r\n    const [tooltip, setTooltip] = useState('Click to add')\r\n\r\n    const {slug} = useParams()\r\n    const dispatch =  useDispatch()\r\n    const {user} = useSelector((state) => ({...state}))\r\n\r\n    const handleAddToCart = () =>{\r\n        //create cart array\r\n        let cart = []\r\n        if(typeof window !== \"undefined\"){\r\n            //if cart is in localStorage, GET it\r\n            if(localStorage.getItem('cart')){\r\n                cart = JSON.parse(localStorage.getItem('cart'))  //converts to JSON\r\n            }\r\n            //push new product to cart\r\n            cart.push({\r\n                ...product, \r\n                count:1\r\n            })\r\n            //remove duplicates\r\n            let unique = _.uniqWith(cart, _.isEqual)\r\n            //save to local storage\r\n            localStorage.setItem('cart', JSON.stringify(unique)) //converts to string\r\n            // console.log(unique)\r\n            //show tooltip\r\n            setTooltip(\"Added\")\r\n            //add to redux state\r\n            dispatch({\r\n                type:\"ADD_TO_CART\",\r\n                payload: unique\r\n            })\r\n             //show cart items in side drawer\r\n             dispatch({\r\n                type:\"SET_VISIBLE\",\r\n                payload: true\r\n            })\r\n        }\r\n    \r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadSingleProduct()\r\n    }, [slug])\r\n\r\n    useEffect(()=>{\r\n        if(!product){\r\n            console.log(\"Waiting...\")\r\n        }else{\r\n            loadCategoryById()\r\n            loadSubsById()\r\n            \r\n    }\r\n    }, [product])\r\n\r\n    useEffect(()=>{\r\n\r\n        if(user ){\r\n            if(product){\r\n                if(product.ratings){\r\n                    let productRatings = product.ratings\r\n                    let userIdToString = user._id.toString()\r\n\r\n\r\n                    let existingRatingObject = productRatings.find(\r\n                        (ele)=>ele.postedBy.toString() === userIdToString\r\n                        )  \r\n                    if(existingRatingObject !== undefined){\r\n                        setStar(existingRatingObject.star)\r\n\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n                \r\n\r\n        \r\n       \r\n        \r\n    }, [user, product])\r\n\r\n    const loadSingleProduct = () => {\r\n        readProduct(slug).\r\n            then((res) =>{\r\n                setProduct(res.data)\r\n                getRelated(res.data._id)\r\n                    .then(res => {\r\n                        setRelated(res.data)\r\n                    })\r\n                    .catch(err =>{\r\n                        console.log(err)\r\n                    })\r\n                \r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const loadCategoryById = () =>{\r\n        findById(product.category)\r\n            .then(res=> {\r\n                setCategory(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    let arr  = []\r\n    \r\n\r\n    const loadSubsById = () =>{\r\n       product.subs.map((sub,index) => {\r\n        getSubById(sub)\r\n            .then((res) => {\r\n                \r\n                const slugVar = slugify(res.data)\r\n                let subObj = {\r\n                    \"slug\":slugVar,\r\n                    \"name\":res.data\r\n                }\r\n                arr.push(subObj)\r\n\r\n            })\r\n            .then(()=>{\r\n                setSubs(arr)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n       })\r\n\r\n    }\r\n\r\n\r\n    const onStartClick = (newRating, name) =>{\r\n        setStar(newRating)\r\n        if(product){\r\n            productStar(product._id, newRating, user.token)\r\n            .then(res => {\r\n                // console.log(res.data)\r\n            })\r\n            .catch(err =>{\r\n                console.log(err)\r\n            })\r\n        }\r\n        // console.log(newRating, star)\r\n        \r\n    }\r\n\r\n    const handleAddToWishlist = (e) =>{\r\n        e.preventDefault()\r\n        addToWishlist(product._id, user.token) \r\n            .then(res =>{\r\n                toast.success(\"Added to wishlist!\")\r\n            })\r\n    }\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className='product-wrapper pt-5 pb-5'>\r\n    <>       \r\n        <div className=\"col-md-7 float-left\" >\r\n            {!product ?  (\r\n                <h4 className='text-danger'>Loading...</h4>\r\n            ): (\r\n                <>\r\n                    {\r\n                        product.images.length > 0 ? (\r\n                            <div>\r\n                            <Carousel \r\n                                showArrows={true} \r\n                                autoPlay \r\n                                infiniteLoop\r\n                                \r\n                                \r\n                                >\r\n                                {product.images.map((img, index)=>{\r\n                                return (\r\n                                    <div key={index}>\r\n                                        <img src={img.url}\r\n                                            style={{\"objectFit\":\"contain\"}}\r\n                                        ></img>\r\n                                    </div>\r\n                                    \r\n                                )\r\n                                \r\n                                })}\r\n                            </Carousel>\r\n                            <Tabs type=\"card\">\r\n                                    <TabPane tab=\"Description\" key=\"1\" >\r\n                                        {product.description && product.description}\r\n                                    </TabPane>\r\n                                    <TabPane tab=\"More\" key=\"2\" >\r\n                                        Feel free to reach customer service for more info about this product\r\n                                    </TabPane>\r\n                            </Tabs>\r\n                            \r\n                            </div>\r\n                        ): (\r\n                            <div>\r\n                            <Card cover ={\r\n                                <img    src={laptop} \r\n                                        style={{\"height\": \"450px\", \"objectFit\":\"contain\"}}\r\n                                        className=\"mb-3\"\r\n                                />\r\n                            }\r\n                            ></Card>\r\n                            <Tabs type=\"card\">\r\n                                    <TabPane tab=\"Description\" key=\"1\" >\r\n                                        {product.description && product.description}\r\n                                    </TabPane>\r\n                                    <TabPane tab=\"More\" key=\"2\" >\r\n                                        Feel free to reach customer service for more info about this product\r\n                                    </TabPane>\r\n                            </Tabs>\r\n                            \r\n                            </div>\r\n                        )\r\n                    }\r\n        \r\n\r\n                \r\n                </>\r\n            )}\r\n            \r\n        </div>\r\n        <div className=\"col-md-5 float-right\">\r\n            <Card  \r\n            actions = {[\r\n                <Tooltip title={tooltip}  >\r\n                    <a>     \r\n                        <ShoppingCartOutlined onClick={handleAddToCart}>className= 'text-succes' ></ShoppingCartOutlined>\r\n                        <br/>\r\n                        Add to Cart\r\n                    </a> \r\n                </Tooltip>,\r\n                    <>\r\n                        <a onClick={handleAddToWishlist}>\r\n                            <HeartOutlined className='text-info'></HeartOutlined>\r\n                            <br/>\r\n                            Add to Wishlist\r\n                        </a>\r\n                    </>,\r\n                    <div>\r\n                        {product ? (\r\n                            <>\r\n                            <RatingModal>\r\n                                <StarRatings\r\n                                    name={product._id}\r\n                                    numberOfStars = {5}\r\n                                    rating = {star}\r\n                                    changeRating = {onStartClick }\r\n                                    isSelectable = {true}\r\n                                    starRatedColor = \"red\"\r\n                                    />\r\n                            </RatingModal>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                           \r\n                            <h3 className='text-danger'>Loading...</h3>\r\n\r\n                            </>\r\n                        )}\r\n                    </div>\r\n        \r\n                   \r\n\r\n\r\n                \r\n            ]}\r\n            \r\n            >\r\n                { !product ? (\r\n                    <Meta \r\n                        title=\"Loading ... \"\r\n                        description =\"Loading ...\"\r\n                >\r\n\r\n                </Meta>              \r\n                ):(\r\n                    <>\r\n                    <Meta \r\n                        title={product.title}\r\n                        description = {product.description}\r\n                    >\r\n                    </Meta> \r\n                    {product && product.ratings && product.ratings.length > 0 ? \r\n                        showAverage(product) :\r\n                        (\r\n                            <>\r\n                           <div className='pt-3 pb-3'>\r\n                                No ratings yet\r\n                           </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                    <br  />\r\n                    <div className=\"mb-3\">\r\n                    </div>\r\n                    \r\n                    <ul className=\"list-group\">\r\n                        <li className=\"list-group-item\">\r\n                            Price <span className='label label-default label-pill pull-xs-right float-right'>{product.price}</span>\r\n                        </li>\r\n                        {category ? (\r\n                            <li className=\"list-group-item\">\r\n                            Category <span className='label label-default label-pill pull-xs-right float-right'>\r\n                            <Link to ={`/category/${category.slug}`}>\r\n                                {category.name}\r\n                            </Link>\r\n                            </span>\r\n                        </li>\r\n                        ): (\r\n                            <li className=\"list-group-item\">\r\n                            Category <span className='label label-default label-pill pull-xs-right float-right'>\r\n                            <Link to ={``}>\r\n                                Loading...\r\n                            </Link>\r\n                            </span>\r\n                        </li>                       ) }\r\n\r\n                        {subs ? (\r\n                            <li className=\"list-group-item\">\r\n                            Subcategories\r\n                                {subs.map((sub, index) =>{\r\n                                    return (\r\n                                        <span key={index}>\r\n                                        <Link className='label label-default label-pill pull-xs-right float-right'  to = {`/sub/${sub.slug}`} > {`| ${sub.name} |`} </Link>\r\n                                        </span>\r\n                                        )\r\n                                })}\r\n                        </li>\r\n                        ) : (\r\n                            <li className=\"list-group-item\">\r\n                            Subs <span className='label label-default label-pill pull-xs-right float-right'>Loading...</span>\r\n                        </li>\r\n                        )}\r\n                        \r\n                        <li className=\"list-group-item\">\r\n                            Shipping <span className='label label-default label-pill pull-xs-right float-right'>{product.shipping}</span>\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            Color <span className='label label-default label-pill pull-xs-right float-right'>{product.color}</span>\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            Brand <span className='label label-default label-pill pull-xs-right float-right'>{product.brand}</span>\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            Quantity <span className='label label-default label-pill pull-xs-right float-right'>{parseInt(product.quantity) - parseInt(product.sold)}</span>\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            Sold <span className='label label-default label-pill pull-xs-right float-right'>{product.sold}</span>\r\n                        </li>\r\n                    </ul>   \r\n\r\n                    </>\r\n                                    \r\n                ) }\r\n                \r\n                \r\n\r\n            </Card>\r\n        </div>\r\n    </>\r\n    </div>\r\n    <div className=\"row\">\r\n        <div className=\"col text-center pt-5 pb-5\">\r\n            <hr/>\r\n                <h4>Related products</h4>\r\n            <hr/>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n\r\n                </div>\r\n            </div>\r\n            {relatedProds.length > 0 ? (\r\n                <>\r\n                {\r\n                    relatedProds.map((prod,index) => {\r\n                        return (\r\n                             <div className='col-md-4 float-left' key= {index}>\r\n                                <ProductCard product={prod}/>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n\r\n                </>\r\n            ): (\r\n                <h6 >No products found</h6>\r\n            )}\r\n                \r\n            \r\n        </div>\r\n    </div>\r\n    \r\n    </>\r\n    \r\n  )\r\n}\r\n\r\nexport default Product"],"names":["userCart","cart","authoken","axios","process","headers","getUserCart","emptyUserCart","saveUserAddress","address","applyCoupon","coupon","createOrder","stripeResponse","getUserOrders","getWishlist","removeFromWishlist","productId","addToWishlist","children","user","useSelector","state","useState","modalVisible","setModalVisible","history","useHistory","params","useParams","onClick","token","push","pathname","from","slug","StarOutlined","className","title","centered","visible","onOk","toast","onCancel","Meta","Card","TabPane","Tabs","product","setProduct","category","setCategory","subs","setSubs","star","setStar","relatedProds","setRelated","tooltip","setTooltip","dispatch","useDispatch","useEffect","loadSingleProduct","loadCategoryById","loadSubsById","console","log","ratings","productRatings","userIdToString","_id","toString","existingRatingObject","find","ele","postedBy","undefined","readProduct","then","res","data","getRelated","catch","err","findById","arr","map","sub","index","getSubById","subObj","slugify","images","length","showArrows","autoPlay","infiniteLoop","img","src","url","style","type","tab","description","cover","laptop","actions","ShoppingCartOutlined","window","localStorage","getItem","JSON","parse","count","unique","_","setItem","stringify","payload","e","preventDefault","HeartOutlined","name","numberOfStars","rating","changeRating","newRating","productStar","isSelectable","starRatedColor","showAverage","price","to","shipping","color","brand","parseInt","quantity","sold","prod","ProductCard"],"sourceRoot":""}