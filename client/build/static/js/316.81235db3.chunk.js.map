{"version":3,"file":"static/js/316.81235db3.chunk.js","mappings":"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","sources":["component/forms/CategoryForm.js","component/nav/AdminNav.js","functions/category.js","pages/admin/category/CategoryUpdate.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst CategoryForm = ({handleSubmit, name, setName}) => {\r\n  return (\r\n    <React.Fragment>\r\n        <form onSubmit = {handleSubmit}>\r\n                <div className=\"form-group col-md-8\">\r\n                    <label htmlFor=\"\">Name</label>\r\n                    <input  type=\"text\"  \r\n                            className='form-control' \r\n                            value={name}\r\n                            onChange = {(e) => setName(e.target.value)}\r\n                            autoFocus\r\n                            required\r\n                            />\r\n                    <button className=\"btn btn-outline-primary mt-3\">\r\n                        Save\r\n                    </button>\r\n                </div>\r\n            </form>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default CategoryForm","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst AdminNav = () => {\r\n  return (\r\n    <nav>\r\n        <ul className=\"nav flex-column\">\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/admin/dashboard\" className=\"nav-link\">DASHBOARD</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/admin/product\" className=\"nav-link\">PRODUCT</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/admin/products\" className=\"nav-link\">PRODUCTS</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/admin/category\" className=\"nav-link\">CATEGORY</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/admin/sub\" className=\"nav-link\">SUB CATEGORY</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/admin/coupon\" className=\"nav-link\">COUPON</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/user/password\" className=\"nav-link\">PASSWORD</Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default AdminNav","import axios from 'axios'\r\n\r\nexport const getCategories = async(authoken) =>{\r\n    return await axios\r\n            .get(`${process.env.REACT_APP_API}/categories`)\r\n            \r\n}\r\n\r\n\r\nexport const getCategory = async(slug) =>{\r\n    return await axios\r\n            .get(`${process.env.REACT_APP_API}/category/${slug}`)\r\n            \r\n}\r\nexport const removeCategory = async(slug, authoken) =>{\r\n    return await axios\r\n            .delete(`${process.env.REACT_APP_API}/category/${slug}`, \r\n            {\r\n                headers:{\r\n                    authoken //send in the headers \r\n                }\r\n            })\r\n            \r\n}\r\n\r\n\r\nexport const updateCategory = async(slug, category, authoken) =>{\r\n    return await axios\r\n            .put(`${process.env.REACT_APP_API}/category/${slug}`, category, \r\n            {\r\n                headers:{\r\n                    authoken //send in the headers \r\n                }\r\n            })\r\n            \r\n}\r\n\r\nexport const createCategory = async(category, authoken) =>{\r\n    return await axios\r\n            .post(`${process.env.REACT_APP_API}/category`, category , \r\n            {\r\n                headers:{\r\n                    authoken //send in the headers \r\n                }\r\n            })\r\n            \r\n}\r\n\r\nexport const getCategorySubs = async(_id) =>{\r\n    return await axios\r\n            .get(`${process.env.REACT_APP_API}/category/subs/${_id}`)\r\n}\r\n\r\nexport const findById = async(_id) =>{\r\n    return await axios\r\n            .get(`${process.env.REACT_APP_API}/find/category/${_id}`)\r\n}","import React, {useState, useEffect} from 'react'\r\nimport AdminNav from '../../../component/nav/AdminNav'\r\nimport {toast}  from 'react-toastify'\r\nimport { useSelector } from 'react-redux'\r\nimport { getCategory, updateCategory } from '../../../functions/category'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport CategoryForm from '../../../component/forms/CategoryForm'\r\n\r\nconst CategoryUpdate = () => {\r\n    const [name, setName] = useState('')\r\n\r\n    let {user} = useSelector((state)=>({...state}))\r\n    let history = useHistory()\r\n    let {slug} = useParams()\r\n\r\n    useEffect(()=>{\r\n        loadCategory()\r\n    }, [])\r\n\r\n\r\n    const  loadCategory = () =>{\r\n       getCategory(slug)\r\n        .then(res =>{\r\n            setName(res.data.name)\r\n        })\r\n        .catch(err =>{\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault()\r\n        updateCategory(slug, {name}, user.token)\r\n            .then(res =>{\r\n                toast.success(\"Category updated!\")\r\n                history.push(\"/admin/category\")\r\n            })\r\n            .catch(err =>{\r\n                toast.error(\"There was an error updating this category!\")\r\n            })\r\n        \r\n    }\r\n\r\n  return (\r\n    <div className=\"container-fluid mt-5\">\r\n        <div className=\"row\">\r\n            <div className=\"col-md-2\">\r\n              <AdminNav></AdminNav>\r\n            </div>\r\n            <div className=\"col\">\r\n              <h4>Update category</h4>\r\n              <CategoryForm handleSubmit={handleSubmit}\r\n                            name ={name}\r\n                            setName={setName}/>\r\n              <hr className='col-md-8'/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default CategoryUpdate"],"names":["handleSubmit","name","setName","onSubmit","className","htmlFor","type","value","onChange","e","target","autoFocus","required","to","getCategories","authoken","axios","process","getCategory","slug","removeCategory","headers","updateCategory","category","createCategory","getCategorySubs","_id","findById","useState","user","useSelector","state","history","useHistory","useParams","useEffect","loadCategory","then","res","data","catch","err","preventDefault","token","toast","push"],"sourceRoot":""}